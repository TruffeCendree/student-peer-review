-- Rapprochement des revues recues et données
SELECT DISTINCT
  user.id,
  firstname,
  lastname,
  received_review.comment AS `Received comment`,
  CASE received_review.comparison
  	WHEN 'worse' THEN 'According to your peer, your delivery is worth ⭐'
    WHEN 'similar' THEN 'According to your peer, your delivery is worth ⭐⭐'
    WHEN 'better' THEN 'According to your peer, your delivery is worth ⭐⭐⭐'
  END AS `Received comparison (compared to your pair)`,
  CASE given_review.comparison
  	WHEN 'worse' THEN 'According to yourself, your delivery is worth ⭐⭐⭐'
    WHEN 'similar' THEN 'According to yourself, your delivery is worth ⭐⭐'
    WHEN 'better' THEN 'According to yourself, your delivery is worth ⭐'
  END AS `Given comparison (compared to your pair)`,
  given_review.comment AS `Given comment`,
  (
    SELECT GROUP_CONCAT(CONCAT(pair_user.firstname, ' ', pair_user.lastname), ', ')
    FROM `user` AS pair_user
    INNER JOIN submission_users_user AS pair_submission_users_user ON pair_submission_users_user.userId = pair_user.id
    WHERE pair_submission_users_user.submissionId = received_review.reviewerSubmissionId
  ) AS 'Your pair',
  CASE TRUE
    WHEN received_review.comparison IS NULL AND given_review.comparison IS NULL THEN 0
    WHEN received_review.comparison IS NULL OR given_review.comparison IS NULL THEN 1
  	WHEN received_review.comparison = 'worse' AND given_review.comparison = 'worse' THEN 0
  	WHEN received_review.comparison = 'worse' AND given_review.comparison = 'similar' THEN 0.5
  	WHEN received_review.comparison = 'worse' AND given_review.comparison = 'better' THEN 1
  	WHEN received_review.comparison = 'similar' AND given_review.comparison = 'worse' THEN 0.5
  	WHEN received_review.comparison = 'similar' AND given_review.comparison = 'similar' THEN 1
  	WHEN received_review.comparison = 'similar' AND given_review.comparison = 'better' THEN 0.5
  	WHEN received_review.comparison = 'better' AND given_review.comparison = 'worse' THEN 1
  	WHEN received_review.comparison = 'better' AND given_review.comparison = 'similar' THEN 0.5
  	WHEN received_review.comparison = 'better' AND given_review.comparison = 'better' THEN 0
  END AS `Reliability score`,
  CASE received_review.comparison
    WHEN NULL THEN 0.5
  	WHEN 'worse' THEN 0
    WHEN 'similar' THEN 0.25
    WHEN 'better' THEN 0.5
  END + CASE given_review.comparison
    WHEN NULL THEN 0
  	WHEN 'worse' THEN 0.5
    WHEN 'similar' THEN 0.25
    WHEN 'better' THEN 0
  END AS `Comparison score`
FROM `user`
INNER JOIN submission_users_user ON submission_users_user.userId = user.id
INNER JOIN submission ON submission.id = submission_users_user.submissionId
INNER JOIN review AS received_review ON received_review.reviewedSubmissionId = submission.id
INNER JOIN review AS given_review ON given_review.reviewerSubmissionId = submission.id
WHERE
  (user.firstname != 'Thomas' || user.lastname != 'VEILLARD') AND
  submission.projectId IN (5, 6, 7, 8, 9, 10)
ORDER BY id ASC

-- Synthèse des travaux rendus par exercice
SELECT
  user.id,
  user.firstname,
  user.lastname,
  GROUP_CONCAT(IF(submission.projectId IN (5, 6), CONCAT('https://peer.thomas-veillard.fr/public/submissions/', submission.fileToken), '') SEPARATOR '') AS `TP 2 Part 1`,
  GROUP_CONCAT(IF(submission.projectId IN (7, 8), CONCAT('https://peer.thomas-veillard.fr/public/submissions/', submission.fileToken), '') SEPARATOR '') AS `TP 2 Part 2`,
  GROUP_CONCAT(IF(submission.projectId IN (9, 10), CONCAT('https://peer.thomas-veillard.fr/public/submissions/', submission.fileToken), '') SEPARATOR '') AS `TP 2 Part 3`
FROM `user`
LEFT JOIN submission_users_user ON submission_users_user.userId = user.id
LEFT JOIN submission ON submission.id = submission_users_user.submissionId
WHERE user.firstname != 'Thomas' || user.lastname != 'VEILLARD'
GROUP BY user.id
ORDER BY id ASC

-- Synthèse des revues données par exercice
SELECT
  user.id,
  firstname,
  lastname,
  SUM(IF(submission.projectId IN (5, 6), 1, 0)) AS `TP 2 Part 1`,
  SUM(IF(submission.projectId IN (7, 8), 1, 0)) AS `TP 2 Part 2`,
  SUM(IF(submission.projectId IN (9, 10), 1, 0)) AS `TP 2 Part 3`
FROM `user`
LEFT JOIN submission_users_user ON submission_users_user.userId = user.id
LEFT JOIN submission ON submission.id = submission_users_user.submissionId
LEFT JOIN review ON review.reviewerSubmissionId = submission.id
WHERE user.firstname != 'Thomas' || user.lastname != 'VEILLARD'
GROUP BY user.id
ORDER BY id ASC
